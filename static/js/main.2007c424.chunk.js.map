{"version":3,"sources":["Components/ImageGallery/ImageGallery.module.css","Components/Searchbar/Searchbar.module.css","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","services/pictures-api.js","App.js","index.js","Components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","SearchBar","onSearch","className","s","Searchbar","SearchForm","onSubmit","e","preventDefault","target","elements","pictureName","value","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","name","placeholder","ImageGalleryItem","webformatURL","tags","largeImageURL","handleImageClick","src","alt","ImageGalleryItem_image","ImageGallery","pictures","map","id","fetchPictures","page","a","axios","get","response","data","hits","App","state","Status","handleFormSubmit","setState","handleNameChange","_","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oJACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,8B,kBCA5ED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,kBAAoB,qCAAqC,wBAA0B,2CAA2C,iBAAmB,sC,+KCC1OC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAM1B,OACE,wBAAQC,UAAWC,IAAEC,UAArB,SACE,uBAAMF,UAAWC,IAAEE,WAAYC,SAPd,SAACC,GACpBA,EAAEC,iBACFP,EAASM,EAAEE,OAAOC,SAASC,YAAYC,QAKrC,UACE,wBAAQC,KAAK,SAASX,UAAWC,IAAEW,kBAAnC,SACE,sBAAMZ,UAAWC,IAAEY,wBAAnB,sBAGF,uBACEb,UAAWC,IAAEa,iBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,KAAK,cAELC,YAAY,mC,iCCQPC,MA3Bf,YAKI,IAJFC,EAIC,EAJDA,aAEAC,GAEC,EAHDC,cAGC,EAFDD,MAGA,OADC,EADDE,iBAGE,oBAAIvB,UAAWC,IAAEkB,iBAAjB,SACE,qBACEK,IAAKJ,EACLK,IAAKJ,EACLrB,UAAWC,IAAEyB,4BCCRC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,oBAAI5B,UAAWC,IAAE0B,aAAjB,SACGC,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,aAAcE,EAArB,EAAqBA,cAAeD,EAApC,EAAoCA,KAApC,OACZ,cAAC,EAAD,CAEED,aAAcA,EACdE,cAAeA,EACfD,KAAMA,GAHDS,S,iBCLFC,EAAa,uCAAG,WAAOtB,EAAauB,GAApB,eAAAC,EAAA,4DACV,0BACD,qCAFW,SAGJC,IAAMC,IAAN,UAFN,0BAEM,iBADP,qCACO,cACY1B,EADZ,mDACkEuB,IAJ9D,cAGrBI,EAHqB,yBAMpBA,EAASC,KAAKC,MANM,2CAAH,wDCPbC,EAAb,4MACEC,MAAQ,CACN/B,YAAa,KACbmB,SAAU,GACVa,OAAQ,OACRT,KAAM,GALV,EAQEU,iBAAmB,SAACjC,GAClB,EAAKkC,SAAS,CAAElC,iBATpB,EAYEmC,iBAAmB,SAACnC,GAClB,EAAKkC,SAAS,CAAElC,iBAbpB,+FAgBE,WAAyBoC,EAAGC,GAA5B,qBAAAb,EAAA,2DACgCc,KAAKP,MAA3B/B,EADV,EACUA,YAAauB,EADvB,EACuBA,OAEnBc,EAAUrC,cAAgBA,GAA+B,KAAhBA,GAH7C,iCAOMsC,KAAKJ,SAAS,CAAEF,OAAQ,UAAWb,SAAU,GAAII,KAAM,IAP7D,SAQ6BD,EAActB,EAAauB,GARxD,OAQYJ,EARZ,OASMmB,KAAKJ,SAAS,CAAEF,OAAQ,aASxBM,KAAKJ,SAAS,CAAEf,aAlBtB,kDAoBMmB,KAAKJ,SAAS,CAAEF,OAAQ,aApB9B,0DAhBF,6EA0CE,WACE,IAAQb,EAAamB,KAAKP,MAAlBZ,SAKR,OACE,gCAEE,cAAC,EAAD,CAAW7B,SAAUgD,KAAKL,mBAM1B,cAAC,EAAD,CAAcd,SAAUA,WAzDhC,GAAyBoB,a,MCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BzD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,uBAAyB,oD","file":"static/js/main.2007c424.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1GqAk\",\"image\":\"ImageGallery_image__2KhoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__puVO1\",\"SearchForm\":\"Searchbar_SearchForm__jd-Bu\",\"SearchForm_button\":\"Searchbar_SearchForm_button__1DhF2\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__ix8G9\",\"SearchForm_input\":\"Searchbar_SearchForm_input__12u9q\"};","import s from './Searchbar.module.css'\r\n\r\nexport const SearchBar = ({ onSearch }) => {\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n    onSearch(e.target.elements.pictureName.value)\r\n  }\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSearch}>\r\n        <button type=\"submit\" className={s.SearchForm_button}>\r\n          <span className={s.SearchForm_button_label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchForm_input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          name=\"pictureName\"\r\n          //   value={this.state.pictureName}\r\n          placeholder=\"Search images and photos\"\r\n          //   onChange={this.handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n\r\n    // <form onSubmit={handleSearch} autoComplete=\"off\">\r\n    //   <input type=\"text\" name=\"countryName\" />\r\n    //   <button type=\"submit\">Search</button>\r\n    // </form>\r\n  )\r\n}\r\n","import s from './ImageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  handleImageClick,\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={s.ImageGalleryItem_image}\r\n        // onClick={() => {\r\n        //   handleImageClick(largeImageURL, tags)\r\n        // }}\r\n      />\r\n    </li>\r\n  )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string,\r\n  largeImageURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  handleImageClick: PropTypes.func,\r\n}\r\n\r\nexport default ImageGalleryItem\r\n","import s from './ImageGallery.module.css'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\n// export const CountryList = ({ countries }) => {\r\n//   return (\r\n//     <ul>\r\n//       {countries.map(({ name, flag }) => (\r\n//         <li key={name}>\r\n//           <img src={flag} alt={name} width=\"24\" height=\"24\" />\r\n//           {name}\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n\r\nexport const ImageGallery = ({ pictures }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {pictures.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          // handleImageClick={this.props.handleImageClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n","// export function fetchPictures(name, page) {\r\n//   const API_KEY = '21672899-2a5ee6aa4aab0c8363895dd3b'\r\n//   const BASE_URL = 'https://pixabay.com/api'\r\n//   return fetch(\r\n//     `${BASE_URL}/?key=${API_KEY}&q=${name}&image_type=photo&page&per_page=12&page=${page}`,\r\n//   ).then((response) => {\r\n//     if (response.ok) {\r\n//       return response.json()\r\n//     }\r\n//     return Promise.reject(new Error(`Нет изображения с именем ${name.tags}`))\r\n//   })\r\n// }\r\n\r\nimport axios from 'axios'\r\n\r\nexport const fetchPictures = async (pictureName, page) => {\r\n  const BASE_URL = 'https://pixabay.com/api'\r\n  const API_KEY = '21672899-2a5ee6aa4aab0c8363895dd3b'\r\n  const response = await axios.get(\r\n    `${BASE_URL}/?key=${API_KEY}&q=${pictureName}&image_type=photo&page&per_page=12&page=${page}`,\r\n  )\r\n  return response.data.hits\r\n  // if (response.ok) {\r\n  //   const data = await response.json()\r\n  //   const { hits } = await data\r\n  //   return hits\r\n  // }\r\n}\r\n\r\n// axios.defaults.baseURL = 'https://restcountries.eu/rest/v2';\r\n\r\n// export const fetchCountries = async countryName => {\r\n//   const params = 'fields=name;capital;population;flag;languages';\r\n//   const response = await axios.get(`/name/${countryName}?${params}`);\r\n//   return response.data;\r\n// };\r\n","import { Component } from 'react'\n// import toast, { Toaster } from 'react-hot-toast'\n// import { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SearchBar } from './Components/Searchbar/Searchbar'\nimport { ImageGallery } from './Components/ImageGallery/ImageGallery'\n// import { CountryInfo } from 'components/CountryInfo/CountryInfo'\n// import { Spinner } from 'components/Spinner/Spinner'\nimport { fetchPictures } from './services/pictures-api'\nexport class App extends Component {\n  state = {\n    pictureName: null,\n    pictures: [],\n    Status: 'idle',\n    page: 1,\n  }\n\n  handleFormSubmit = (pictureName) => {\n    this.setState({ pictureName })\n  }\n\n  handleNameChange = (pictureName) => {\n    this.setState({ pictureName })\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const { pictureName, page } = this.state\n    const shouldFetch =\n      prevState.pictureName !== pictureName && pictureName !== ''\n\n    if (shouldFetch) {\n      try {\n        this.setState({ Status: 'pending', pictures: [], page: 1 })\n        const pictures = await fetchPictures(pictureName, page)\n        this.setState({ Status: 'resolved' })\n\n        // if (countries.length > 10) {\n        //   return toast(\n        //     'Too many matches found. Please enter a more specific name.',\n        //     { icon: '⚠️' },\n        //   )\n        // }\n\n        this.setState({ pictures })\n      } catch (error) {\n        this.setState({ Status: 'rejected' })\n        //   toast.error('Oops, there is no country with that name')\n      }\n    }\n  }\n\n  render() {\n    const { pictures } = this.state\n    // const { countries, reqStatus } = this.state\n    // const showCountryList = countries.length >= 2 && countries.length < 10\n    // const showCountryInfo = countries.length === 1\n\n    return (\n      <div>\n        {/* <SearchBox onSearch={this.handleNameChange} /> */}\n        <SearchBar onSearch={this.handleFormSubmit} />\n        {/* {reqStatus === 'pending' && <Spinner size=\"40\" />}\n        {showCountryList && <CountryList countries={countries} />}\n      \n        {showCountryInfo && <CountryInfo country={countries[0]} />}\n        <Toaster position=\"top-right\" /> */}\n        <ImageGallery pictures={pictures} />\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__gKywI\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1gxcw\"};"],"sourceRoot":""}